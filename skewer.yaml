title: Skupper Hello World using Podman
subtitle: Connect services running as Podman containers
workflow: null
overview: |
  This example is a basic multi-service HTTP application deployed
  across a Kubernetes cluster and a bare-metal host or VM running
  Podman containers.

  It contains two services:

  * A backend service that exposes an `/api/hello` endpoint.  It
    returns greetings of the form `Hi, <your-name>.  I am <my-name>
    (<container>)`.

  * A frontend service that sends greetings to the backend and
    fetches new greetings in response.

  With Skupper, you can run the backend as a container on your local
  machine and the frontend in Kubernetes and maintain connectivity
  between the two services without exposing the backend to the public
  internet.

  <!-- <img src="images/entities.svg" width="640"/> -->
prerequisites: |
  * A working installation of Podman ([installation
    guide][install-podman])

  * The `kubectl` command-line tool, version 1.15 or later
    ([installation guide][install-kubectl])

  * Access to a Kubernetes cluster, from [any provider you
    choose][kube-providers]

  [install-podman]: https://podman.io/getting-started/installation
  [install-kubectl]: https://kubernetes.io/docs/tasks/tools/install-kubectl/
  [kube-providers]: https://skupper.io/start/kubernetes.html
sites:
  kubernetes:
    title: Kubernetes
    platform: kubernetes
    namespace: hello-world
    env:
      KUBECONFIG: ~/.kube/config-hello-world
  podman:
    title: Podman
    platform: podman
    env:
      SKUPPER_PLATFORM: podman
steps:
  - standard: install_the_skupper_command_line_tool
  - standard: set_up_your_kubeconfigs
  - standard: set_up_your_kubernetes_sites
  - standard: set_up_your_podman_site
  - standard: link_your_sites
  - title: Deploy the application workloads
    preamble: |
      This example runs the frontend on Kubernetes and the backend as
      a local Podman container.

      Use `kubectl create deployment` to deploy the frontend service
      in `hello-world`.

      Use `docker run` or `podman run` to run the backend service on
      your local machine.
    commands:
      kubernetes:
        - run: kubectl create deployment frontend --image quay.io/skupper/hello-world-frontend
      podman:
        - run: podman run --name backend-target --network skupper --detach --rm -p 8080:8080 quay.io/skupper/hello-world-backend
  - title: Expose the backend service
    preamble: |
      XXX

      Use `skupper service create` to define a Skupper service called
      `backend`.  Then use `skupper gateway bind` to attach your
      running backend process as a target for the service.

      XXX
    commands:
      kubernetes:
        - run: skupper service create backend 8080
      podman:
        - run: skupper service create backend 8080
        - run: skupper service bind backend host backend-target --target-port 8080
  - standard: access_the_application
  - standard: cleaning_up
    commands:
      kubernetes:
        - run: skupper delete
        - run: kubectl delete service/frontend
        - run: kubectl delete deployment/frontend
      podman:
        - run: skupper delete
